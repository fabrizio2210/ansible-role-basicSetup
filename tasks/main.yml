---
- name: utente pi
  user:
    name: pi
    password: "{{ password }}"
  when: password is defined and ansible_facts['os_family'] != "OpenWrt"

- debug:
    var: ansible_facts

- name: Imposto hostname
  hostname:
    name: "{{ inventory_hostname }}"
  when: ansible_facts['os_family'] != "OpenWrt"

- name: Imposto timezone
  timezone:
      name: CET
  when: ansible_facts['os_family'] != "OpenWrt"

- name: Crea custom fact directory
  file:
    path: /etc/ansible/facts.d
    state: directory

- name: Inserisco custom fact
  copy:
    src: files/custom.fact
    dest: /etc/ansible/facts.d/custom.fact
    mode: 0755
  when: ansible_facts['os_family'] != "OpenWrt"

- name: Re-run setup to use custom facts
  setup: filter=ansible_local

#TODO la chiave andrebbe ricavata dai facts del banana
- name: Inserisci chiave ssh per fare backup
  authorized_key: 
    user: root
    state: present
    key: "{{ lookup('file', 'id_ssh_backup') }}"
  when:  backupKey  == True

- name: Inserisci chiave ssh per fare deploy
  authorized_key: 
    user: root
    state: present
    key: "{{ lookup('file', 'id_ssh_jenkins') }}"
  when:  
    - jenkinsKey is defined 
    - jenkinsKey == True

- name: Disabilito IPv6
  copy:
    src: files/50-noipv6.conf
    dest: /etc/sysctl.d/50-noipv6.conf
    mode: 0644
  notify: reload network
  when: ansible_facts['os_family'] != "OpenWrt"

- name: Creazione mountpoint per disco
  file: path=/mnt/HDD state=directory

- name: Mount del disco
  mount:
    path: /mnt/HDD
    src: UUID={{ UUID_disk }}
    fstype: ext4
    opts: defaults,nofail
    state: mounted
  when: UUID_disk is defined

- name: Enable systemd watchdog
  ini_file:
    path: /etc/systemd/system.conf
    section: Manager
    option: RuntimeWatchdogSec
    value: "15"
    backup: yes
  notify: reload systemd
  when: ansible_facts['os_family'] != "OpenWrt"

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers
